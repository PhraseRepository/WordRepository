{"version":3,"sources":["logo.svg","components/signin/signincomponent.js","pages/signin.js","components/PhraseCard.js","pages/Home.js","pages/Search.js","pages/Create.js","components/Navbar.js","pages/Explore.js","pages/SignOut.js","App.js","reportWebVitals.js","index.js"],"names":["supabase","createClient","SignInComponent","params","useState","emailEntered","setEmail","passwordEntered","setPassword","loggedIn","changeStatus","a","auth","signUp","email","password","user","session","error","window","alert","from","insert","userId","id","data","signIn","console","log","className","type","onChange","e","target","value","style","marginBottom","marginRight","onClick","undefined","to","SignIn","Tag","props","PhraseCard","author","updateAuthor","saved","updateStatus","likeCount","updateLikes","select","match","savedPhrases","includes","object","update","likes","error2","tempSaved","index","indexOf","splice","array","useEffect","checkSaved","href","tags","map","marginTop","Home","myPhrases","updatePhrases","updateSavedPhrases","trendingPhrases","updateTrendingPhrases","changeRedirect","history","useHistory","useForm","register","handleSubmit","order","ascending","limit","tempArray","savedPostId","data2","length","push","formState","errors","addTrending","getPersonal","getSaved","display","flexDirection","justifyContent","padding","boxSizing","fontSize","textDecoration","onSubmit","required","placeholder","width","phraseObject","alignItems","backgroundColor","children","marginLeft","border","Search","position","natural","require","Create","tagList","updatedPhrases","navigation","register2","handleSubmit2","data5","errors2","stemmedTag","PorterStemmer","stem","tag","toLowerCase","reset","phrase","addToDatabase","Navbar","zIndex","flex","Explore","SignOut","signOut","App","path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.c277eb81.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import { useState, useEffect, useRef } from \"react\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport { createClient } from \"@supabase/supabase-js\";\r\nconst supabase = createClient(\"https://hiiwioouscmwdgfhobom.supabase.co\", \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJyb2xlIjoiYW5vbiIsImlhdCI6MTYyODA0MTA5NiwiZXhwIjoxOTQzNjE3MDk2fQ.uMF3eAqCD2zgJnJJL6h2rKYSH-d2H6rsGrXGF74X-70\");\r\n\r\nconst SignInComponent = (params) => {\r\n    const [emailEntered, setEmail] = useState(\"\");\r\n    const [passwordEntered, setPassword] = useState(\"\");\r\n    const [loggedIn, changeStatus] = useState(false);\r\n    async function signUp() {\r\n        const { user, session, error } = await supabase.auth.signUp({\r\n            email: emailEntered,\r\n            password: passwordEntered,\r\n        });\r\n        if (error) {\r\n            window.alert(\"Did you mean to sign in?\");\r\n        } else {\r\n            const { data, error } = await supabase.from(\"users\").insert([{ email: user?.email, userId: user?.id }]);\r\n            window.alert(\"You have signed up\");\r\n        }\r\n    }\r\n    async function signIn() {\r\n        const { user, session, error } = await supabase.auth.signIn({\r\n            email: emailEntered,\r\n            password: passwordEntered,\r\n        });\r\n        if (error) {\r\n            window.alert(\"Check your email and password and try again!\");\r\n        }\r\n        if (user) {\r\n            console.log(supabase.auth.user()?.id);\r\n            console.log(\"Successful sign in \");\r\n            changeStatus(true);\r\n        }\r\n    }\r\n    return (\r\n        <div>\r\n            <h1 className='page-heading'>SIGN IN</h1>\r\n            <h1 className='input-label'>Email</h1>\r\n            <input type='text' onChange={(e) => setEmail(e.target.value)}></input>\r\n            <h1 className='input-label'>Password</h1>\r\n            <input onChange={(e) => setPassword(e.target.value)} type='password' style={{ marginBottom: \"2rem\" }}></input>\r\n            <button className='form-button' style={{ marginRight: \"2rem\" }} onClick={signIn}>\r\n                Sign In\r\n            </button>\r\n            <button className='form-button' onClick={signUp}>\r\n                Sign Up\r\n            </button>\r\n            {loggedIn && supabase.auth.user() !== undefined ? <Redirect to='/' /> : <div />}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default SignInComponent;\r\n","import { useState, useEffect, useRef } from \"react\";\r\nimport { createClient } from \"@supabase/supabase-js\";\r\nimport SignInComponent from \"../components/signin/signincomponent\";\r\nconst supabase = createClient(\r\n    \"https://hiiwioouscmwdgfhobom.supabase.co\",\r\n    \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJyb2xlIjoiYW5vbiIsImlhdCI6MTYyODA0MTA5NiwiZXhwIjoxOTQzNjE3MDk2fQ.uMF3eAqCD2zgJnJJL6h2rKYSH-d2H6rsGrXGF74X-70\"\r\n);\r\n\r\nconst SignIn = (params) => {\r\n    return (\r\n        <div>\r\n            <SignInComponent></SignInComponent>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default SignIn;\r\n","// import { SupabaseAuthClient } from \"@supabase/supabase-js/dist/main/lib/SupabaseAuthClient\";\r\nimport React from \"react\";\r\nimport { useState, useEffect, useRef } from \"react\";\r\n\r\nimport { createClient } from \"@supabase/supabase-js\";\r\nconst supabase = createClient(\r\n    \"https://hiiwioouscmwdgfhobom.supabase.co\",\r\n    \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJyb2xlIjoiYW5vbiIsImlhdCI6MTYyODA0MTA5NiwiZXhwIjoxOTQzNjE3MDk2fQ.uMF3eAqCD2zgJnJJL6h2rKYSH-d2H6rsGrXGF74X-70\"\r\n);\r\n\r\nconst PhraseCard = (props) => {\r\n    const [author, updateAuthor] = useState(\"SOMEONE\");\r\n    const [saved, updateStatus] = useState(false);\r\n    const [likeAllowed, updateLikeStatus] = useState(true);\r\n    const [likeCount, updateLikes] = useState(0);\r\n\r\n    useEffect(() => {\r\n        if (supabase.auth.user().id == props.object.userId) {\r\n            updateAuthor(\"ME\");\r\n        }\r\n        updateLikes(props.object.likes);\r\n        checkSaved();\r\n    }, [props.object]);\r\n    async function checkSaved() {\r\n        const { data, error } = await supabase.from(\"users\").select(\"savedPhrases\", \"id\").match({ userId: supabase.auth.user().id });\r\n        if (data[0].savedPhrases.includes(props.object.id)) {\r\n            updateStatus(true);\r\n        }\r\n    }\r\n    async function addLike() {\r\n        const { data: data2, error2 } = await supabase\r\n            .from(\"pickuplines\")\r\n            .update([{ likes: likeCount + 1 }])\r\n            .match({ id: props.object.id });\r\n        updateLikes(likeCount + 1);\r\n    }\r\n    async function addSaves() {\r\n        const { data, error } = await supabase.from(\"users\").select(\"savedPhrases\", \"id\").match({ userId: supabase.auth.user().id });\r\n        if (data[0].savedPhrases.includes(props.object.id)) {\r\n            var tempSaved = data[0].savedPhrases;\r\n            const index = tempSaved.indexOf(props.object.id);\r\n            tempSaved.splice(index, 1);\r\n            const { data: data2, error2 } = await supabase\r\n                .from(\"users\")\r\n                .update([{ savedPhrases: tempSaved }])\r\n                .match({ userId: supabase.auth.user().id });\r\n            updateStatus(false);\r\n\r\n            return;\r\n        }\r\n        var array = [props.object.id, ...data[0].savedPhrases];\r\n        console.log(array);\r\n        const { data: data2, error2 } = await supabase\r\n            .from(\"users\")\r\n            .update([{ savedPhrases: array }])\r\n            .match({ userId: supabase.auth.user().id });\r\n        updateStatus(true);\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <div className='phrase-card'>\r\n                <p className='phrase-card-text'>{props.object.data}</p>\r\n                {/* <p className='phrase-card-author'> */}\r\n                <a href='' className='phrase-card-author'>\r\n                    by {author}\r\n                </a>\r\n                {/* </p> */}\r\n\r\n                <div className='phrase-card-actions'>\r\n                    {props.object.tags.map((type) => {\r\n                        return <Tag data={type}></Tag>;\r\n                    })}\r\n                </div>\r\n                <div className='phrase-card-actions' style={{ marginTop: 0 }}>\r\n                    <button className='phrase-card-action' onClick={addLike}>\r\n                        {likeCount == 1 ? <p>{likeCount} Like</p> : <p>{likeCount} Likes</p>}\r\n                    </button>\r\n                    <button className='phrase-card-action' onClick={addSaves}>\r\n                        {saved ? <p>Saved</p> : <p>Save</p>}\r\n                    </button>\r\n                </div>\r\n            </div>\r\n        </>\r\n    );\r\n};\r\n\r\nfunction Tag(props) {\r\n    return <div className='phrase-card-tag'>{props.data}</div>;\r\n}\r\n\r\nexport default PhraseCard;\r\n","import React from \"react\";\r\nimport PhraseCard from \"../components/PhraseCard\";\r\nimport { useState, useEffect, useRef } from \"react\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport { useHistory } from \"react-router\";\r\n\r\nimport { createClient } from \"@supabase/supabase-js\";\r\nconst supabase = createClient(\r\n    \"https://hiiwioouscmwdgfhobom.supabase.co\",\r\n    \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJyb2xlIjoiYW5vbiIsImlhdCI6MTYyODA0MTA5NiwiZXhwIjoxOTQzNjE3MDk2fQ.uMF3eAqCD2zgJnJJL6h2rKYSH-d2H6rsGrXGF74X-70\"\r\n);\r\n\r\nfunction Home(props) {\r\n    // State variable that holds the array of rows that are created by you\r\n    const [myPhrases, updatePhrases] = useState([]);\r\n    const [savedPhrases, updateSavedPhrases] = useState([]);\r\n    const [trendingPhrases, updateTrendingPhrases] = useState([]);\r\n    const [redirect, changeRedirect] = useState(false);\r\n    let history = useHistory();\r\n\r\n    const {\r\n        register: register,\r\n        handleSubmit: handleSubmit,\r\n        formState: { errors },\r\n    } = useForm();\r\n\r\n    useEffect(() => {\r\n        console.log(\"hello\");\r\n        // needs to be a separate function for await\r\n        addTrending();\r\n        getPersonal();\r\n        getSaved();\r\n    }, [supabase.auth.user()]);\r\n    const searchThings = (data) => {\r\n        history.push(\"/search/\" + data.value);\r\n        changeRedirect(true);\r\n    };\r\n    async function getPersonal() {\r\n        // this does correctly get the data from supabase\r\n        const { data, error } = await supabase\r\n            .from(\"pickuplines\")\r\n            .select()\r\n            .match({ userId: supabase.auth.user()?.id })\r\n            .order(\"date\", { ascending: false })\r\n            .limit(4);\r\n        // updates the state variable probably where things go wrong\r\n        updatePhrases(data);\r\n        // data.forEach((element) => {\r\n        //     console.log(element);\r\n        // });\r\n    }\r\n    async function getSaved() {\r\n        const { data, error } = await supabase.from(\"users\").select(\"savedPhrases\").match({ userId: supabase.auth.user()?.id });\r\n        console.log(data);\r\n        var tempArray = [];\r\n        for (const savedPostId of data[0].savedPhrases) {\r\n            const { data: data2, error: error2 } = await supabase.from(\"pickuplines\").select().match({ id: savedPostId });\r\n            console.log(data2, savedPostId);\r\n            if (tempArray.length == 4) {\r\n                break;\r\n            }\r\n            tempArray.push(data2[0]);\r\n        }\r\n        updateSavedPhrases(tempArray);\r\n    }\r\n    async function addTrending() {\r\n        const { data, error } = await supabase.from(\"pickuplines\").select().order(\"likes\", { ascending: false }).limit(4);\r\n        updateTrendingPhrases(data);\r\n    }\r\n    return (\r\n        <div>\r\n            <div style={{ display: \"flex\", flexDirection: \"column\", justifyContent: \"center\", padding: \"1rem\", boxSizing: \"border-box\" }}>\r\n                <h1 style={{ fontSize: \"5rem\", marginBottom: \"1rem\" }}>\r\n                    FIND THE PERFECT <span style={{ textDecoration: \"underline\" }}>PICKUP LINE</span>\r\n                </h1>\r\n                <form onSubmit={handleSubmit(searchThings)}>\r\n                    <input type='text' {...register(\"value\", { required: true })} placeholder='Describe your target...'></input>\r\n                </form>\r\n            </div>\r\n\r\n            <div style={{ width: \"100%\", display: \"flex\", flexDirection: \"row\" }}>\r\n                <div className='phrase-column'>\r\n                    <h2>Trending Pickups</h2>\r\n                    {trendingPhrases.map((phraseObject) => {\r\n                        console.log(phraseObject.id);\r\n                        return <PhraseCard object={phraseObject} key={phraseObject.id}></PhraseCard>;\r\n                    })}\r\n                </div>\r\n                <div className='phrase-column'>\r\n                    <h2>My Pickups</h2>\r\n                    {myPhrases.map((phraseObject) => {\r\n                        console.log(phraseObject.id);\r\n                        return <PhraseCard object={phraseObject} key={phraseObject.id}></PhraseCard>;\r\n                    })}\r\n                </div>\r\n                <div className='phrase-column'>\r\n                    <h2>Saved Pickups</h2>\r\n                    {savedPhrases.map((phraseObject) => {\r\n                        console.log(phraseObject);\r\n                        return <PhraseCard object={phraseObject} key={phraseObject.id}></PhraseCard>;\r\n                    })}\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Home;\r\n","import React from \"react\";\r\nimport PhraseCard from \"../components/PhraseCard\";\r\nimport { useHistory } from \"react-router\";\r\n\r\nfunction Search(props) {\r\n    return (\r\n        <div style={{ display: \"flex\", flexDirection: \"row\" }}>\r\n            <div style={{ width: \"50vw\", padding: \"1rem\", boxSizing: \"border-box\" }}></div>\r\n            <div style={{ width: \"50vw\", padding: \"1rem\", boxSizing: \"border-box\", position: \"fixed\" }}>\r\n                <input type='text' placeholder='Describe your target...'></input>\r\n                <div style={{ marginTop: \"2rem\" }}>\r\n                    <Tag>Hello</Tag>\r\n                    <Tag>Hello</Tag>\r\n                    <Tag>Hello</Tag>\r\n                    <Tag>Hello</Tag>\r\n                    <Tag>Hello</Tag>\r\n                    <Tag>Hello</Tag>\r\n                    <Tag>Hello</Tag>\r\n                    <Tag>Hello</Tag>\r\n                    <Tag>Hello</Tag>\r\n                    <Tag>Hello</Tag>\r\n                    <Tag>Hello</Tag>\r\n                    <Tag>Hello</Tag>\r\n                    <Tag>Hello</Tag>\r\n                    <Tag>Hello</Tag>\r\n                    <Tag>Hello</Tag>\r\n                    <Tag>Hello</Tag>\r\n                    <Tag>Hello</Tag>\r\n                </div>\r\n            </div>\r\n            <div className='phrase-column'>\r\n                {/* <PhraseCard></PhraseCard>\r\n                <PhraseCard></PhraseCard>\r\n                <PhraseCard></PhraseCard>\r\n                <PhraseCard></PhraseCard>\r\n                <PhraseCard></PhraseCard>\r\n                <PhraseCard></PhraseCard>\r\n                <PhraseCard></PhraseCard>\r\n                <PhraseCard></PhraseCard>\r\n                <PhraseCard></PhraseCard> */}\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport function Tag(props) {\r\n    return (\r\n        <div\r\n            className='phrase-card-tag'\r\n            style={{\r\n                marginBottom: \"2rem\",\r\n                fontSize: \"2rem\",\r\n                padding: \"1rem\",\r\n                display: \"inline-flex\",\r\n                alignItems: \"center\",\r\n                backgroundColor: \"var(--secondaryBackground)\",\r\n            }}>\r\n            {props.children}\r\n            <button\r\n                style={{\r\n                    marginLeft: \"1rem\",\r\n                    fontSize: \"2rem\",\r\n                    border: \"none\",\r\n                    backgroundColor: \"transparent\",\r\n                    // backgroundColor: \"var(--tertiaryBackground)\",\r\n                    // aspectRatio: \"1/1\",\r\n                    // boxSizing: \"border-box\",\r\n                }}>\r\n                X\r\n            </button>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Search;\r\n","import React from \"react\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport { useState, useEffect, useRef } from \"react\";\r\nimport { Redirect, useHistory } from \"react-router-dom\";\r\n\r\nimport { createClient } from \"@supabase/supabase-js\";\r\nimport { Tag } from \"./Search\";\r\nconst supabase = createClient(\r\n    \"https://hiiwioouscmwdgfhobom.supabase.co\",\r\n    \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJyb2xlIjoiYW5vbiIsImlhdCI6MTYyODA0MTA5NiwiZXhwIjoxOTQzNjE3MDk2fQ.uMF3eAqCD2zgJnJJL6h2rKYSH-d2H6rsGrXGF74X-70\"\r\n);\r\nconst natural = require(\"natural\");\r\n\r\nfunction Create(props) {\r\n    const [tagList, updatedPhrases] = useState([]);\r\n    const navigation = useHistory();\r\n\r\n    const {\r\n        register: register,\r\n        handleSubmit: handleSubmit,\r\n        formState: { errors },\r\n    } = useForm();\r\n    const {\r\n        register: register2,\r\n        handleSubmit: handleSubmit2,\r\n        formState: { errors2 },\r\n    } = useForm();\r\n\r\n    const onTagEntry = (data, e) => {\r\n        let stemmedTag = natural.PorterStemmer.stem(data.tag);\r\n        stemmedTag = stemmedTag.toLowerCase();\r\n        if (!tagList.includes(stemmedTag)) {\r\n            updatedPhrases([...tagList, stemmedTag]);\r\n        }\r\n        e.target.reset();\r\n    };\r\n    const onPickupSubmit = (data) => {\r\n        console.log(\"yo\");\r\n        addToDatabase(data);\r\n    };\r\n    async function addToDatabase(data5) {\r\n        // const { data, error } = await supabase.from(\"users\").insert([{ email: \"user.email\", userId: \"user.id\" }]);\r\n\r\n        const { data, error } = await supabase.from(\"pickuplines\").insert([{ userId: supabase.auth.user().id, data: data5.value, tags: tagList }]);\r\n        navigation.push(\"/home\");\r\n    }\r\n    return (\r\n        <div>\r\n            <h1 className='page-heading'>Add a Roast</h1>\r\n            <div>\r\n                <form onSubmit={handleSubmit2(onTagEntry)}>\r\n                    {/* register your input into the hook by invoking the \"register\" function */}\r\n                    <h1 className='input-label'>Describe the person this is for, or the type of line (e.g. pun, bad)</h1>\r\n                    <input type='text' {...register2(\"tag\")} placeholder='french' />\r\n                </form>\r\n                <div style={{ marginTop: \"2rem\" }}>\r\n                    {tagList.map((phrase) => (\r\n                        <Tag>{phrase}</Tag>\r\n                    ))}\r\n                </div>\r\n            </div>\r\n            <div>\r\n                <form onSubmit={handleSubmit(onPickupSubmit)}>\r\n                    <h1 className='input-label'>Enter Pickup Line</h1>\r\n                    <input type='text' {...register(\"value\", { required: true })} placeholder='Are you French? Because Eiffel for you.'></input>\r\n                    {errors.value && <h1 className='input-error'>Please enter a Pickup Line</h1>}\r\n\r\n                    <button type='submit' style={{ marginTop: \"2rem\" }}>\r\n                        Submit\r\n                    </button>\r\n                </form>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Create;\r\n","import React from \"react\";\r\n\r\nimport { FaFire, FaGrinAlt, FaGrinHearts, FaSadCry, FaSignOutAlt, FaPen } from \"react-icons/fa\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nfunction Navbar(props) {\r\n    return (\r\n        <>\r\n            {/* THIS ONE IS FAKE */}\r\n            <div className='navbar' style={{ position: \"unset\" }}>\r\n                <Link to='/home' className='navbar-option'>\r\n                    <FaFire></FaFire>\r\n                </Link>\r\n                {/* <a href='https://google.com' className='navbar-option'>\r\n                    <FaGrinHearts></FaGrinHearts>\r\n                    <h1>Pickups</h1>\r\n                </a> */}\r\n                <Link to='/create' className='navbar-option'>\r\n                    <FaPen></FaPen>\r\n                    <h1>Create</h1>\r\n                </Link>\r\n            </div>\r\n            <div className='navbar' style={{ zIndex: 10 }}>\r\n                <Link to='/home' className='navbar-option'>\r\n                    <FaFire></FaFire>\r\n                </Link>\r\n                {/* <a href='https://google.com' className='navbar-option'>\r\n                    <FaGrinHearts></FaGrinHearts>\r\n                    <h1>Pickups</h1>\r\n                </a> */}\r\n                <Link to='/create' className='navbar-option'>\r\n                    <FaPen></FaPen>\r\n                    <h1>Create</h1>\r\n                </Link>\r\n                <div style={{ flex: 1 }}></div>\r\n                <Link to='/signout' className='navbar-option'>\r\n                    <FaSignOutAlt></FaSignOutAlt>\r\n                </Link>\r\n            </div>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default Navbar;\r\n","import React from \"react\";\r\nimport PhraseCard from \"../components/PhraseCard\";\r\n\r\nfunction Explore(props) {\r\n    return (\r\n        <div>\r\n            <PhraseCard></PhraseCard>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Explore;\r\n","import React, { useEffect } from \"react\";\r\n\r\nimport { createClient } from \"@supabase/supabase-js\";\r\nimport { useHistory } from \"react-router-dom\";\r\nconst supabase = createClient(\r\n    \"https://hiiwioouscmwdgfhobom.supabase.co\",\r\n    \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJyb2xlIjoiYW5vbiIsImlhdCI6MTYyODA0MTA5NiwiZXhwIjoxOTQzNjE3MDk2fQ.uMF3eAqCD2zgJnJJL6h2rKYSH-d2H6rsGrXGF74X-70\"\r\n);\r\n\r\nfunction SignOut(props) {\r\n    const navigation = useHistory();\r\n\r\n    useEffect(function () {\r\n        //sign out of supabase\r\n        supabase.auth.signOut();\r\n        navigation.push(\"/signin\");\r\n    }, []);\r\n\r\n    return <div>Sign Out</div>;\r\n}\r\n\r\nexport default SignOut;\r\n","import logo from \"./logo.svg\";\r\nimport \"./App.css\";\r\nimport { HashRouter as Router, Switch, Route, Link, Redirect } from \"react-router-dom\";\r\nimport SignIn from \"./pages/signin.js\";\r\nimport Home from \"./pages/Home\";\r\nimport Create from \"./pages/Create\";\r\nimport Navbar from \"./components/Navbar\";\r\nimport Explore from \"./pages/Explore\";\r\nimport { createClient } from \"@supabase/supabase-js\";\r\nimport Search from \"./pages/Search\";\r\nimport SignOut from \"./pages/SignOut\";\r\nconst supabase = createClient(\r\n    \"https://hiiwioouscmwdgfhobom.supabase.co\",\r\n    \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJyb2xlIjoiYW5vbiIsImlhdCI6MTYyODA0MTA5NiwiZXhwIjoxOTQzNjE3MDk2fQ.uMF3eAqCD2zgJnJJL6h2rKYSH-d2H6rsGrXGF74X-70\"\r\n);\r\n\r\nfunction App() {\r\n    return (\r\n        <Router>\r\n            {supabase.auth.user() == undefined ? <Redirect to='/signin'></Redirect> : <div></div>}\r\n            <div style={{ display: \"flex\", flexDirection: \"row\" }}>\r\n                <div className='page'>\r\n                    <Switch>\r\n                        <Route path='/signin'>\r\n                            <SignIn></SignIn>\r\n                        </Route>\r\n                        <Route path='/signout'>\r\n                            <SignOut></SignOut>\r\n                        </Route>\r\n                        <Route path='/home'>\r\n                            <Home></Home>\r\n                        </Route>\r\n                        <Route path='/create'>\r\n                            <Create></Create>\r\n                        </Route>\r\n                        <Route path='/search'>\r\n                            <Search></Search>\r\n                        </Route>\r\n                        <Route path='/'>\r\n                            <Home></Home>\r\n                        </Route>\r\n                    </Switch>\r\n                </div>\r\n                <Navbar></Navbar>\r\n            </div>\r\n        </Router>\r\n    );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}