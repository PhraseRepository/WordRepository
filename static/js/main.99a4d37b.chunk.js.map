{"version":3,"sources":["logo.svg","components/signin/signincomponent.js","pages/signin.js","components/PhraseCard.js","pages/Home.js","pages/Search.js","pages/Create.js","components/Navbar.js","pages/Explore.js","pages/SignOut.js","App.js","reportWebVitals.js","index.js"],"names":["supabase","createClient","SignInComponent","params","useState","emailEntered","setEmail","passwordEntered","setPassword","loggedIn","changeStatus","a","auth","signUp","email","password","user","session","error","window","alert","from","insert","userId","id","data","signIn","console","log","className","type","onChange","e","target","value","style","marginBottom","marginRight","onClick","undefined","to","SignIn","Tag","props","PhraseCard","author","updateAuthor","saved","updateStatus","likeCount","updateLikes","isLiked","setIsLiked","checkLiked","select","match","likedPosts","includes","object","savedPhrases","likesData","update","likes","error2","newLiked","filter","num","error4","tempSaved","index","indexOf","splice","array","useEffect","checkSaved","href","tags","map","marginTop","backgroundColor","color","natural","require","Home","myPhrases","updatePhrases","updateSavedPhrases","trendingPhrases","updateTrendingPhrases","changeRedirect","history","useHistory","useForm","register","handleSubmit","order","ascending","tempArray","savedPostId","data2","length","push","limit","formState","errors","addTrending","getPersonal","getSaved","display","flexDirection","justifyContent","padding","boxSizing","fontSize","textDecoration","onSubmit","split","tag","stemmedTag","PorterStemmer","stem","toLowerCase","join","required","placeholder","width","phraseObject","alignItems","children","marginLeft","border","transform","Search","tagList","updatedPhrases","useLocation","useParams","matchingPhrases","updateMatch","register2","handleSubmit2","search","contains","errors2","loadedTags","position","concat","reset","phrase","newAr","ph","removeTag","Create","navigation","data5","addToDatabase","Navbar","zIndex","flex","Explore","SignOut","signOut","App","path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.99a4d37b.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import { useState, useEffect, useRef } from \"react\";\nimport { Redirect } from \"react-router-dom\";\nimport { createClient } from \"@supabase/supabase-js\";\nconst supabase = createClient(\"https://hiiwioouscmwdgfhobom.supabase.co\", \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJyb2xlIjoiYW5vbiIsImlhdCI6MTYyODA0MTA5NiwiZXhwIjoxOTQzNjE3MDk2fQ.uMF3eAqCD2zgJnJJL6h2rKYSH-d2H6rsGrXGF74X-70\");\n\nconst SignInComponent = (params) => {\n    const [emailEntered, setEmail] = useState(\"\");\n    const [passwordEntered, setPassword] = useState(\"\");\n    const [loggedIn, changeStatus] = useState(false);\n    async function signUp() {\n        const { user, session, error } = await supabase.auth.signUp({\n            email: emailEntered,\n            password: passwordEntered,\n        });\n        if (error) {\n            window.alert(\"Sorry, something went wrong.\");\n        } else {\n            const { data, error } = await supabase.from(\"users\").insert([{ email: user?.email, userId: user?.id }]);\n            window.alert(\"You have signed up\");\n        }\n    }\n    async function signIn() {\n        const { user, session, error } = await supabase.auth.signIn({\n            email: emailEntered,\n            password: passwordEntered,\n        });\n        if (error) {\n            window.alert(\"Check your email and password and try again!\");\n        }\n        if (user) {\n            console.log(supabase.auth.user()?.id);\n            console.log(\"Successful sign in \");\n            changeStatus(true);\n        }\n    }\n    return (\n        <div>\n            <h1 className='page-heading'>SIGN IN</h1>\n            <h1 className='input-label'>Email</h1>\n            <input type='text' onChange={(e) => setEmail(e.target.value)}></input>\n            <h1 className='input-label'>Password</h1>\n            <input onChange={(e) => setPassword(e.target.value)} type='password' style={{ marginBottom: \"2rem\" }}></input>\n            <button className='form-button' style={{ marginRight: \"2rem\" }} onClick={signIn}>\n                Sign In\n            </button>\n            <button className='form-button' onClick={signUp}>\n                Sign Up\n            </button>\n            {loggedIn && supabase.auth.user() !== undefined ? <Redirect to='/' /> : <div />}\n        </div>\n    );\n};\n\nexport default SignInComponent;\n","import { useState, useEffect, useRef } from \"react\";\nimport { createClient } from \"@supabase/supabase-js\";\nimport SignInComponent from \"../components/signin/signincomponent\";\nconst supabase = createClient(\n    \"https://hiiwioouscmwdgfhobom.supabase.co\",\n    \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJyb2xlIjoiYW5vbiIsImlhdCI6MTYyODA0MTA5NiwiZXhwIjoxOTQzNjE3MDk2fQ.uMF3eAqCD2zgJnJJL6h2rKYSH-d2H6rsGrXGF74X-70\"\n);\n\nconst SignIn = (params) => {\n    return (\n        <div>\n            <SignInComponent></SignInComponent>\n        </div>\n    );\n};\n\nexport default SignIn;\n","// import { SupabaseAuthClient } from \"@supabase/supabase-js/dist/main/lib/SupabaseAuthClient\";\nimport React from \"react\";\nimport { useState, useEffect, useRef } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { createClient } from \"@supabase/supabase-js\";\nconst supabase = createClient(\"https://hiiwioouscmwdgfhobom.supabase.co\", \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJyb2xlIjoiYW5vbiIsImlhdCI6MTYyODA0MTA5NiwiZXhwIjoxOTQzNjE3MDk2fQ.uMF3eAqCD2zgJnJJL6h2rKYSH-d2H6rsGrXGF74X-70\");\n\nconst PhraseCard = (props) => {\n    const [author, updateAuthor] = useState(\"SOMEONE\");\n    const [saved, updateStatus] = useState(false);\n    const [likeAllowed, updateLikeStatus] = useState(true);\n    const [likeCount, updateLikes] = useState(0);\n    const [isLiked, setIsLiked] = useState(false);\n\n    useEffect(() => {\n        if (supabase.auth.user()?.id == props.object?.userId) {\n            updateAuthor(\"ME\");\n        }\n        updateLikes(props.object?.likes);\n        checkSaved();\n        checkLiked();\n    }, [props.object]);\n\n    async function checkLiked() {\n        try {\n            const { data, error } = await supabase.from(\"users\").select(\"likedPosts\").match({ userId: supabase.auth.user()?.id });\n            if (data[0].likedPosts.includes(props.object.id)) {\n                setIsLiked(true);\n            } else {\n                setIsLiked(false);\n            }\n        } catch (error) {}\n    }\n\n    async function checkSaved() {\n        try {\n            const { data, error } = await supabase.from(\"users\").select(\"savedPhrases\", \"id\").match({ userId: supabase.auth.user()?.id });\n            if (data[0].savedPhrases.includes(props.object.id)) {\n                updateStatus(true);\n            }\n        } catch (error) {}\n    }\n    async function addLike() {\n        if (!supabase.auth.user()) return;\n        const { data: likesData, error: likesError } = await supabase.from(\"users\").select(\"likedPosts\").match({ userId: supabase.auth.user()?.id });\n        console.log(\"likesData\");\n        console.log(likesData);\n        console.log(likesData[0].likedPosts);\n\n        if (likesData[0].likedPosts.includes(props.object.id)) {\n            const { data: data2, error2 } = await supabase\n                .from(\"pickuplines\")\n                .update([{ likes: likeCount - 1 }])\n                .match({ id: props.object.id });\n\n            let newLiked = [...likesData[0].likedPosts];\n            newLiked = newLiked.filter((num) => num != props.object.id);\n            const { data: data3, error4 } = await supabase\n                .from(\"users\")\n                .update([{ likedPosts: newLiked }])\n                .match({ userId: supabase.auth.user()?.id });\n            updateLikes(likeCount - 1);\n        } else {\n            const { data: data2, error2 } = await supabase\n                .from(\"pickuplines\")\n                .update([{ likes: likeCount + 1 }])\n                .match({ id: props.object.id });\n\n            const newLiked = [...likesData[0].likedPosts, props.object.id];\n            const { data: data3, error4 } = await supabase\n                .from(\"users\")\n                .update([{ likedPosts: newLiked }])\n                .match({ userId: supabase.auth.user()?.id });\n            updateLikes(likeCount + 1);\n        }\n        checkLiked();\n    }\n    async function addSaves() {\n        if (!supabase.auth.user()) return;\n        const { data, error } = await supabase.from(\"users\").select(\"savedPhrases\", \"id\").match({ userId: supabase.auth.user().id });\n        if (data[0].savedPhrases.includes(props.object.id)) {\n            var tempSaved = data[0].savedPhrases;\n            const index = tempSaved.indexOf(props.object.id);\n            tempSaved.splice(index, 1);\n            const { data: data2, error2 } = await supabase\n                .from(\"users\")\n                .update([{ savedPhrases: tempSaved }])\n                .match({ userId: supabase.auth.user().id });\n            updateStatus(false);\n\n            return;\n        }\n        var array = [props.object.id, ...data[0].savedPhrases];\n        console.log(array);\n        const { data: data2, error2 } = await supabase\n            .from(\"users\")\n            .update([{ savedPhrases: array }])\n            .match({ userId: supabase.auth.user().id });\n        updateStatus(true);\n    }\n\n    return (\n        <>\n            <div className='phrase-card'>\n                <p className='phrase-card-text'>{props.object?.data}</p>\n                {/* <p className='phrase-card-author'> */}\n                <a href='' className='phrase-card-author'>\n                    by {author}\n                </a>\n                {/* </p> */}\n\n                <div className='phrase-card-actions'>\n                    {props.object?.tags.map((type) => {\n                        return <Tag data={type}></Tag>;\n                    })}\n                </div>\n                <div className='phrase-card-actions' style={{ marginTop: 0 }}>\n                    <button className='phrase-card-action' onClick={addLike} style={{ backgroundColor: isLiked ? \"#ffdd00\" : \"\" }}>\n                        {likeCount == 1 ? <p style={{ color: isLiked ? \"black\" : \"\" }}>{likeCount} 💜</p> : <p style={{ color: isLiked ? \"black\" : \"\" }}>{likeCount} 💜</p>}\n                    </button>\n                    <button className='phrase-card-action' onClick={addSaves} style={{ backgroundColor: saved ? \"var(--primary)\" : \"\" }}>\n                        💾\n                        {/* {saved ? <p>Saved</p> : <p>Save</p>} */}\n                    </button>\n                </div>\n            </div>\n        </>\n    );\n};\n\nfunction Tag(props) {\n    return (\n        <Link className='phrase-card-tag' to={\"/search/\" + props.data}>\n            {props.data}\n        </Link>\n    );\n}\n\nexport default PhraseCard;\n","import React from \"react\";\nimport PhraseCard from \"../components/PhraseCard\";\nimport { useState, useEffect, useRef } from \"react\";\nimport { useForm } from \"react-hook-form\";\nimport { useHistory } from \"react-router\";\nimport { Link } from \"react-router-dom\";\nimport { createClient } from \"@supabase/supabase-js\";\nconst supabase = createClient(\"https://hiiwioouscmwdgfhobom.supabase.co\", \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJyb2xlIjoiYW5vbiIsImlhdCI6MTYyODA0MTA5NiwiZXhwIjoxOTQzNjE3MDk2fQ.uMF3eAqCD2zgJnJJL6h2rKYSH-d2H6rsGrXGF74X-70\");\n\nconst natural = require(\"natural\");\n\nfunction Home(props) {\n    // State variable that holds the array of rows that are created by you\n    const [myPhrases, updatePhrases] = useState([]);\n    const [savedPhrases, updateSavedPhrases] = useState([]);\n    const [trendingPhrases, updateTrendingPhrases] = useState([]);\n    const [redirect, changeRedirect] = useState(false);\n    let history = useHistory();\n\n    const {\n        register: register,\n        handleSubmit: handleSubmit,\n        formState: { errors },\n    } = useForm();\n\n    useEffect(() => {\n        console.log(\"hello\");\n        // needs to be a separate function for await\n        addTrending();\n        getPersonal();\n        getSaved();\n    }, [supabase.auth.user()]);\n    const searchThings = (data) => {\n        let tags = data.value;\n        tags = tags.split(\" \");\n        tags = tags.map((tag) => {\n            let stemmedTag = natural.PorterStemmer.stem(tag);\n            stemmedTag = stemmedTag.toLowerCase();\n            return stemmedTag;\n        });\n        history.push(\"/search/\" + tags.join(\"-\"));\n        changeRedirect(true);\n    };\n    async function getPersonal() {\n        // this does correctly get the data from supabase\n        const { data, error } = await supabase.from(\"pickuplines\").select().match({ userId: supabase.auth.user()?.id }).order(\"date\", { ascending: false });\n        // updates the state variable probably where things go wrong\n        updatePhrases(data);\n        // data.forEach((element) => {\n        //     console.log(element);\n        // });\n    }\n    async function getSaved() {\n        const { data, error } = await supabase.from(\"users\").select(\"savedPhrases\").match({ userId: supabase.auth.user()?.id });\n        console.log(data);\n        var tempArray = [];\n        try {\n            for (const savedPostId of data[0]?.savedPhrases) {\n                const { data: data2, error: error2 } = await supabase.from(\"pickuplines\").select().match({ id: savedPostId });\n                console.log(data2, savedPostId);\n                if (tempArray.length == 4) {\n                    break;\n                }\n                tempArray.push(data2[0]);\n            }\n            updateSavedPhrases(tempArray);\n        } catch (error) {}\n    }\n    async function addTrending() {\n        const { data, error } = await supabase.from(\"pickuplines\").select().order(\"likes\", { ascending: false }).limit(8);\n        updateTrendingPhrases(data);\n    }\n    return (\n        <div>\n            <div style={{ display: \"flex\", flexDirection: \"column\", justifyContent: \"center\", padding: \"1rem\", boxSizing: \"border-box\" }}>\n                <h1 style={{ fontSize: \"5rem\", marginBottom: \"1rem\" }}>\n                    FIND THE PERFECT <span style={{ textDecoration: \"underline\" }}>PICKUP LINE</span>\n                </h1>\n                <form onSubmit={handleSubmit(searchThings)}>\n                    <input type='text' {...register(\"value\", { required: true })} placeholder='Describe your target...'></input>\n                </form>\n            </div>\n\n            <div style={{ width: \"100%\", display: \"flex\", flexDirection: \"row\" }}>\n                <div className='phrase-column'>\n                    <h2>Trending Pickups</h2>\n                    {trendingPhrases.map((phraseObject) => {\n                        console.log(phraseObject.id);\n                        return <PhraseCard object={phraseObject} key={phraseObject?.id}></PhraseCard>;\n                    })}\n                </div>\n                <div className='phrase-column'>\n                    <h2>My Pickups</h2>\n                    {myPhrases.map((phraseObject) => {\n                        console.log(phraseObject.id);\n                        return <PhraseCard object={phraseObject} key={phraseObject?.id}></PhraseCard>;\n                    })}\n                    {myPhrases.length == 0 ? (\n                        <h1>\n                            Create pickup lines from the{\" \"}\n                            <Link to='/create' style={{ color: \"var(--primaryText\" }}>\n                                Create\n                            </Link>{\" \"}\n                            page\n                        </h1>\n                    ) : (\n                        <div></div>\n                    )}\n                </div>\n                <div className='phrase-column'>\n                    <h2>Saved Pickups</h2>\n                    {savedPhrases.map((phraseObject) => {\n                        console.log(phraseObject);\n                        return <PhraseCard object={phraseObject} key={phraseObject?.id}></PhraseCard>;\n                    })}\n                    {savedPhrases.length == 0 ? <h1>Save pickup lines by pressing the save icon (and reloading)</h1> : <div></div>}\n                </div>\n            </div>\n        </div>\n    );\n}\n\nexport default Home;\n","import React from \"react\";\nimport PhraseCard from \"../components/PhraseCard\";\nimport { useLocation } from \"react-router\";\nimport { useState, useEffect, useRef } from \"react\";\nimport { createClient } from \"@supabase/supabase-js\";\nimport { useForm } from \"react-hook-form\";\nimport { useParams } from \"react-router-dom\";\nconst natural = require(\"natural\");\n\nconst supabase = createClient(\"https://hiiwioouscmwdgfhobom.supabase.co\", \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJyb2xlIjoiYW5vbiIsImlhdCI6MTYyODA0MTA5NiwiZXhwIjoxOTQzNjE3MDk2fQ.uMF3eAqCD2zgJnJJL6h2rKYSH-d2H6rsGrXGF74X-70\");\n\nfunction Search(props) {\n    const [tagList, updatedPhrases] = useState([]);\n    let location = useLocation();\n    let params = useParams();\n    const [matchingPhrases, updateMatch] = useState([]);\n    useEffect(() => {}, [supabase.auth.user()]);\n\n    const {\n        register: register,\n        handleSubmit: handleSubmit,\n        formState: { errors },\n    } = useForm();\n    const {\n        register: register2,\n        handleSubmit: handleSubmit2,\n        formState: { errors2 },\n    } = useForm();\n\n    function removeTag(phrase) {\n        let newAr = tagList.filter((ph) => phrase !== ph);\n        updatedPhrases(newAr);\n        console.log(\"newAr\");\n        console.log(newAr);\n    }\n\n    async function search() {\n        console.log(tagList);\n        const { data: data2, error: error2 } = await supabase.from(\"pickuplines\").select().contains(\"tags\", tagList).limit(10);\n        updateMatch(data2);\n    }\n    const onTagEntry = (data, e) => {\n        let stemmedTag = natural.PorterStemmer.stem(data.tag);\n        stemmedTag = stemmedTag.toLowerCase();\n        if (!tagList.includes(stemmedTag)) {\n            if (stemmedTag !== \"\") {\n                console.log(\"asdfasdfasdfads\");\n                console.log(stemmedTag);\n                console.log(tagList);\n                updatedPhrases([stemmedTag].concat(tagList));\n            }\n        }\n        e.target.reset();\n    };\n\n    useEffect(function () {\n        if (params.tags) {\n            let loadedTags = params.tags.split(\"-\");\n            updatedPhrases(loadedTags);\n        }\n        search();\n    }, []);\n\n    useEffect(\n        function () {\n            console.log(\"my taglist\");\n            console.log(tagList);\n            search();\n        },\n        [tagList]\n    );\n\n    return (\n        <div style={{ display: \"flex\", flexDirection: \"row\" }}>\n            <div style={{ width: \"50vw\", padding: \"1rem\", boxSizing: \"border-box\" }}></div>\n            <div style={{ width: \"50vw\", padding: \"1rem\", boxSizing: \"border-box\", position: \"fixed\" }}>\n                <form onSubmit={handleSubmit2(onTagEntry)}>\n                    {/* register your input into the hook by invoking the \"register\" function */}\n                    <h1 className='input-label'>Describe the person this is for, or the type of line (e.g. pun, bad)</h1>\n                    <input type='text' {...register2(\"tag\")} placeholder='tags...' id='searchBox' />\n\n                    <div style={{ marginTop: \"2rem\" }}></div>\n                </form>\n                {tagList.map((phrase) => {\n                    console.log(phrase);\n                    return (\n                        <Tag\n                            onClick={function () {\n                                removeTag(phrase);\n                            }}>\n                            {phrase}\n                        </Tag>\n                    );\n                })}\n            </div>\n            <div className='phrase-column'>\n                {!!matchingPhrases &&\n                    matchingPhrases.map((phraseObject) => {\n                        console.log(phraseObject.data);\n                        return <PhraseCard object={phraseObject} key={phraseObject.id}></PhraseCard>;\n                    })}\n            </div>\n            <div style={{ marginTop: \"2rem\" }}></div>\n        </div>\n    );\n}\n\nexport function Tag(props) {\n    return (\n        <div\n            className='phrase-card-tag'\n            style={{\n                marginBottom: \"2rem\",\n                fontSize: \"2rem\",\n                padding: \"1rem\",\n                display: \"inline-flex\",\n                alignItems: \"center\",\n                backgroundColor: \"var(--secondaryBackground)\",\n            }}>\n            {props.children}\n            <button\n                onClick={props.onClick}\n                style={{\n                    marginLeft: \"1rem\",\n                    fontSize: \"2rem\",\n                    border: \"none\",\n                    backgroundColor: \"transparent\",\n                    transform: \"rotate(\" + -45 + \"deg)\",\n                    color: \"var(--secondaryText)\",\n                    // backgroundColor: \"var(--tertiaryBackground)\",\n                    // aspectRatio: \"1/1\",\n                    // boxSizing: \"border-box\",\n                }}>\n                +\n            </button>\n        </div>\n    );\n}\n\nexport default Search;\n","import React from \"react\";\nimport { useForm } from \"react-hook-form\";\nimport { useState, useEffect, useRef } from \"react\";\nimport { Redirect, useHistory } from \"react-router-dom\";\n\nimport { createClient } from \"@supabase/supabase-js\";\nimport { Tag } from \"./Search\";\nconst supabase = createClient(\"https://hiiwioouscmwdgfhobom.supabase.co\", \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJyb2xlIjoiYW5vbiIsImlhdCI6MTYyODA0MTA5NiwiZXhwIjoxOTQzNjE3MDk2fQ.uMF3eAqCD2zgJnJJL6h2rKYSH-d2H6rsGrXGF74X-70\");\nconst natural = require(\"natural\");\n\nfunction Create(props) {\n    const [tagList, updatedPhrases] = useState([]);\n    const navigation = useHistory();\n\n    const {\n        register: register,\n        handleSubmit: handleSubmit,\n        formState: { errors },\n    } = useForm();\n    const {\n        register: register2,\n        handleSubmit: handleSubmit2,\n        formState: { errors2 },\n    } = useForm();\n\n    const onTagEntry = (data, e) => {\n        let stemmedTag = natural.PorterStemmer.stem(data.tag);\n        stemmedTag = stemmedTag.toLowerCase();\n        if (!tagList.includes(stemmedTag)) {\n            updatedPhrases([...tagList, stemmedTag]);\n        }\n        e.target.reset();\n    };\n    const onPickupSubmit = (data) => {\n        console.log(\"yo\");\n        addToDatabase(data);\n    };\n    async function addToDatabase(data5) {\n        // const { data, error } = await supabase.from(\"users\").insert([{ email: \"user.email\", userId: \"user.id\" }]);\n\n        const { data, error } = await supabase.from(\"pickuplines\").insert([{ userId: supabase.auth.user().id, data: data5.value, tags: tagList }]);\n        navigation.push(\"/home\");\n    }\n\n    function removeTag(phrase) {\n        updatedPhrases(tagList.filter((ph) => phrase !== ph));\n    }\n    console.log(supabase.auth.user());\n    if (supabase.auth.user() == undefined) return <Redirect to='/signin'></Redirect>;\n\n    return (\n        <div>\n            <h1 className='page-heading'>Add a Pickup Line</h1>\n            <div>\n                <form onSubmit={handleSubmit2(onTagEntry)}>\n                    {/* register your input into the hook by invoking the \"register\" function */}\n                    <h1 className='input-label'>Describe the person this is for, or the type of line (e.g. pun, bad)</h1>\n                    <input type='text' {...register2(\"tag\")} placeholder='french' />\n                </form>\n                <div style={{ marginTop: \"2rem\" }}>\n                    {tagList.map((phrase) => (\n                        <Tag\n                            onClick={function () {\n                                removeTag(phrase);\n                            }}>\n                            {phrase}\n                        </Tag>\n                    ))}\n                </div>\n            </div>\n            <div>\n                <form onSubmit={handleSubmit(onPickupSubmit)}>\n                    <h1 className='input-label'>Enter Pickup Line</h1>\n                    <input type='text' {...register(\"value\", { required: true })} placeholder='Are you French? Because Eiffel for you.'></input>\n                    {errors.value && <h1 className='input-error'>Please enter a Pickup Line</h1>}\n\n                    <button type='submit' style={{ marginTop: \"2rem\" }}>\n                        Submit\n                    </button>\n                </form>\n            </div>\n        </div>\n    );\n}\n\nexport default Create;\n","import React from \"react\";\n\nimport { FaFire, FaGrinAlt, FaGrinHearts, FaSadCry, FaSignOutAlt, FaPen } from \"react-icons/fa\";\nimport { Link } from \"react-router-dom\";\n\nfunction Navbar(props) {\n    return (\n        <>\n            {/* THIS ONE IS FAKE */}\n            <div className='navbar' style={{ position: \"unset\" }}>\n                <Link to='/home' className='navbar-option'>\n                    <FaFire></FaFire>\n                </Link>\n                {/* <a href='https://google.com' className='navbar-option'>\n                    <FaGrinHearts></FaGrinHearts>\n                    <h1>Pickups</h1>\n                </a> */}\n                <Link to='/create' className='navbar-option'>\n                    <FaPen></FaPen>\n                    <h1>Create</h1>\n                </Link>\n            </div>\n            <div className='navbar' style={{ zIndex: 10 }}>\n                <Link to='/home' className='navbar-option'>\n                    <FaFire></FaFire>\n                </Link>\n                {/* <a href='https://google.com' className='navbar-option'>\n                    <FaGrinHearts></FaGrinHearts>\n                    <h1>Pickups</h1>\n                </a> */}\n                <Link to='/create' className='navbar-option'>\n                    <FaPen></FaPen>\n                    <h1>Create</h1>\n                </Link>\n                <div style={{ flex: 1 }}></div>\n                <Link to='/signout' className='navbar-option'>\n                    <FaSignOutAlt></FaSignOutAlt>\n                </Link>\n            </div>\n        </>\n    );\n}\n\nexport default Navbar;\n","import React from \"react\";\nimport PhraseCard from \"../components/PhraseCard\";\n\nfunction Explore(props) {\n    return (\n        <div>\n            <PhraseCard></PhraseCard>\n        </div>\n    );\n}\n\nexport default Explore;\n","import React, { useEffect } from \"react\";\n\nimport { createClient } from \"@supabase/supabase-js\";\nimport { useHistory } from \"react-router-dom\";\nconst supabase = createClient(\n    \"https://hiiwioouscmwdgfhobom.supabase.co\",\n    \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJyb2xlIjoiYW5vbiIsImlhdCI6MTYyODA0MTA5NiwiZXhwIjoxOTQzNjE3MDk2fQ.uMF3eAqCD2zgJnJJL6h2rKYSH-d2H6rsGrXGF74X-70\"\n);\n\nfunction SignOut(props) {\n    const navigation = useHistory();\n\n    useEffect(function () {\n        //sign out of supabase\n        supabase.auth.signOut();\n        navigation.push(\"/signin\");\n    }, []);\n\n    return <div>Sign Out</div>;\n}\n\nexport default SignOut;\n","import logo from \"./logo.svg\";\nimport \"./App.css\";\nimport { HashRouter as Router, Switch, Route, Link, Redirect } from \"react-router-dom\";\nimport SignIn from \"./pages/signin.js\";\nimport Home from \"./pages/Home\";\nimport Create from \"./pages/Create\";\nimport Navbar from \"./components/Navbar\";\nimport Explore from \"./pages/Explore\";\nimport { createClient } from \"@supabase/supabase-js\";\nimport Search from \"./pages/Search\";\nimport SignOut from \"./pages/SignOut\";\nconst supabase = createClient(\n    \"https://hiiwioouscmwdgfhobom.supabase.co\",\n    \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJyb2xlIjoiYW5vbiIsImlhdCI6MTYyODA0MTA5NiwiZXhwIjoxOTQzNjE3MDk2fQ.uMF3eAqCD2zgJnJJL6h2rKYSH-d2H6rsGrXGF74X-70\"\n);\n\nfunction App() {\n    return (\n        <Router>\n            {supabase.auth.user() == undefined ? <Redirect to='/signin'></Redirect> : <div></div>}\n            <div style={{ display: \"flex\", flexDirection: \"row\" }}>\n                <div className='page'>\n                    <Switch>\n                        <Route path='/signin'>\n                            <SignIn></SignIn>\n                        </Route>\n                        <Route path='/signout'>\n                            <SignOut></SignOut>\n                        </Route>\n                        <Route path='/home'>\n                            <Home></Home>\n                        </Route>\n                        <Route path='/create'>\n                            <Create></Create>\n                        </Route>\n                        <Route path='/search/:tags?'>\n                            <Search></Search>\n                        </Route>\n                        <Route path='/'>\n                            <Home></Home>\n                        </Route>\n                    </Switch>\n                </div>\n                <Navbar></Navbar>\n            </div>\n        </Router>\n    );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}