{"version":3,"sources":["logo.svg","components/signin/signincomponent.js","pages/signin.js","components/PhraseCard.js","pages/Home.js","pages/Search.js","pages/Create.js","components/Navbar.js","pages/Explore.js","pages/SignOut.js","App.js","reportWebVitals.js","index.js"],"names":["supabase","createClient","SignInComponent","params","useState","emailEntered","setEmail","passwordEntered","setPassword","loggedIn","changeStatus","a","auth","signUp","email","password","user","session","error","window","alert","from","insert","userId","id","data","signIn","console","log","className","type","onChange","e","target","value","style","marginBottom","marginRight","onClick","undefined","to","SignIn","Tag","props","PhraseCard","author","updateAuthor","saved","updateStatus","likeCount","updateLikes","isLiked","setIsLiked","checkLiked","select","match","likedPosts","includes","object","savedPhrases","likesData","update","likes","error2","newLiked","filter","num","error4","tempSaved","index","indexOf","splice","array","useEffect","checkSaved","href","tags","map","marginTop","backgroundColor","color","natural","require","Home","myPhrases","updatePhrases","updateSavedPhrases","trendingPhrases","updateTrendingPhrases","changeRedirect","history","useHistory","useForm","register","handleSubmit","order","ascending","tempArray","savedPostId","data2","length","push","limit","formState","errors","addTrending","getPersonal","getSaved","display","flexDirection","justifyContent","padding","boxSizing","fontSize","textDecoration","onSubmit","split","tag","stemmedTag","PorterStemmer","stem","toLowerCase","join","required","placeholder","width","phraseObject","alignItems","children","marginLeft","border","transform","Search","tagList","updatedPhrases","useLocation","useParams","matchingPhrases","updateMatch","register2","handleSubmit2","contains","errors2","loadedTags","search","position","concat","reset","phrase","newAr","ph","removeTag","Create","navigation","data5","addToDatabase","Navbar","zIndex","flex","Explore","SignOut","signOut","App","path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.e358da57.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import { useState, useEffect, useRef } from \"react\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport { createClient } from \"@supabase/supabase-js\";\r\nconst supabase = createClient(\"https://hiiwioouscmwdgfhobom.supabase.co\", \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJyb2xlIjoiYW5vbiIsImlhdCI6MTYyODA0MTA5NiwiZXhwIjoxOTQzNjE3MDk2fQ.uMF3eAqCD2zgJnJJL6h2rKYSH-d2H6rsGrXGF74X-70\");\r\n\r\nconst SignInComponent = (params) => {\r\n    const [emailEntered, setEmail] = useState(\"\");\r\n    const [passwordEntered, setPassword] = useState(\"\");\r\n    const [loggedIn, changeStatus] = useState(false);\r\n    async function signUp() {\r\n        const { user, session, error } = await supabase.auth.signUp({\r\n            email: emailEntered,\r\n            password: passwordEntered,\r\n        });\r\n        if (error) {\r\n            window.alert(\"Did you mean to sign in?\");\r\n        } else {\r\n            const { data, error } = await supabase.from(\"users\").insert([{ email: user?.email, userId: user?.id }]);\r\n            window.alert(\"You have signed up\");\r\n        }\r\n    }\r\n    async function signIn() {\r\n        const { user, session, error } = await supabase.auth.signIn({\r\n            email: emailEntered,\r\n            password: passwordEntered,\r\n        });\r\n        if (error) {\r\n            window.alert(\"Check your email and password and try again!\");\r\n        }\r\n        if (user) {\r\n            console.log(supabase.auth.user()?.id);\r\n            console.log(\"Successful sign in \");\r\n            changeStatus(true);\r\n        }\r\n    }\r\n    return (\r\n        <div>\r\n            <h1 className='page-heading'>SIGN IN</h1>\r\n            <h1 className='input-label'>Email</h1>\r\n            <input type='text' onChange={(e) => setEmail(e.target.value)}></input>\r\n            <h1 className='input-label'>Password</h1>\r\n            <input onChange={(e) => setPassword(e.target.value)} type='password' style={{ marginBottom: \"2rem\" }}></input>\r\n            <button className='form-button' style={{ marginRight: \"2rem\" }} onClick={signIn}>\r\n                Sign In\r\n            </button>\r\n            <button className='form-button' onClick={signUp}>\r\n                Sign Up\r\n            </button>\r\n            {loggedIn && supabase.auth.user() !== undefined ? <Redirect to='/' /> : <div />}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default SignInComponent;\r\n","import { useState, useEffect, useRef } from \"react\";\r\nimport { createClient } from \"@supabase/supabase-js\";\r\nimport SignInComponent from \"../components/signin/signincomponent\";\r\nconst supabase = createClient(\r\n    \"https://hiiwioouscmwdgfhobom.supabase.co\",\r\n    \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJyb2xlIjoiYW5vbiIsImlhdCI6MTYyODA0MTA5NiwiZXhwIjoxOTQzNjE3MDk2fQ.uMF3eAqCD2zgJnJJL6h2rKYSH-d2H6rsGrXGF74X-70\"\r\n);\r\n\r\nconst SignIn = (params) => {\r\n    return (\r\n        <div>\r\n            <SignInComponent></SignInComponent>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default SignIn;\r\n","// import { SupabaseAuthClient } from \"@supabase/supabase-js/dist/main/lib/SupabaseAuthClient\";\r\nimport React from \"react\";\r\nimport { useState, useEffect, useRef } from \"react\";\r\n\r\nimport { createClient } from \"@supabase/supabase-js\";\r\nconst supabase = createClient(\r\n    \"https://hiiwioouscmwdgfhobom.supabase.co\",\r\n    \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJyb2xlIjoiYW5vbiIsImlhdCI6MTYyODA0MTA5NiwiZXhwIjoxOTQzNjE3MDk2fQ.uMF3eAqCD2zgJnJJL6h2rKYSH-d2H6rsGrXGF74X-70\"\r\n);\r\n\r\nconst PhraseCard = (props) => {\r\n    const [author, updateAuthor] = useState(\"SOMEONE\");\r\n    const [saved, updateStatus] = useState(false);\r\n    const [likeAllowed, updateLikeStatus] = useState(true);\r\n    const [likeCount, updateLikes] = useState(0);\r\n    const [isLiked, setIsLiked] = useState(false);\r\n\r\n    useEffect(() => {\r\n        if (supabase.auth.user()?.id == props.object?.userId) {\r\n            updateAuthor(\"ME\");\r\n        }\r\n        updateLikes(props.object?.likes);\r\n        checkSaved();\r\n        checkLiked();\r\n    }, [props.object]);\r\n\r\n    async function checkLiked() {\r\n        try {\r\n            const { data, error } = await supabase.from(\"users\").select(\"likedPosts\").match({ userId: supabase.auth.user()?.id });\r\n            if (data[0].likedPosts.includes(props.object.id)) {\r\n                setIsLiked(true);\r\n            } else {\r\n                setIsLiked(false);\r\n            }\r\n        } catch (error) {}\r\n    }\r\n\r\n    async function checkSaved() {\r\n        try {\r\n            const { data, error } = await supabase.from(\"users\").select(\"savedPhrases\", \"id\").match({ userId: supabase.auth.user()?.id });\r\n            if (data[0].savedPhrases.includes(props.object.id)) {\r\n                updateStatus(true);\r\n            }\r\n        } catch (error) {}\r\n    }\r\n    async function addLike() {\r\n        if (!supabase.auth.user()) return;\r\n        const { data: likesData, error: likesError } = await supabase.from(\"users\").select(\"likedPosts\").match({ userId: supabase.auth.user()?.id });\r\n        console.log(\"likesData\");\r\n        console.log(likesData);\r\n        console.log(likesData[0].likedPosts);\r\n\r\n        if (likesData[0].likedPosts.includes(props.object.id)) {\r\n            const { data: data2, error2 } = await supabase\r\n                .from(\"pickuplines\")\r\n                .update([{ likes: likeCount - 1 }])\r\n                .match({ id: props.object.id });\r\n\r\n            let newLiked = [...likesData[0].likedPosts];\r\n            newLiked = newLiked.filter((num) => num != props.object.id);\r\n            const { data: data3, error4 } = await supabase\r\n                .from(\"users\")\r\n                .update([{ likedPosts: newLiked }])\r\n                .match({ userId: supabase.auth.user()?.id });\r\n            updateLikes(likeCount - 1);\r\n        } else {\r\n            const { data: data2, error2 } = await supabase\r\n                .from(\"pickuplines\")\r\n                .update([{ likes: likeCount + 1 }])\r\n                .match({ id: props.object.id });\r\n\r\n            const newLiked = [...likesData[0].likedPosts, props.object.id];\r\n            const { data: data3, error4 } = await supabase\r\n                .from(\"users\")\r\n                .update([{ likedPosts: newLiked }])\r\n                .match({ userId: supabase.auth.user()?.id });\r\n            updateLikes(likeCount + 1);\r\n        }\r\n        checkLiked();\r\n    }\r\n    async function addSaves() {\r\n        if (!supabase.auth.user()) return;\r\n        const { data, error } = await supabase.from(\"users\").select(\"savedPhrases\", \"id\").match({ userId: supabase.auth.user().id });\r\n        if (data[0].savedPhrases.includes(props.object.id)) {\r\n            var tempSaved = data[0].savedPhrases;\r\n            const index = tempSaved.indexOf(props.object.id);\r\n            tempSaved.splice(index, 1);\r\n            const { data: data2, error2 } = await supabase\r\n                .from(\"users\")\r\n                .update([{ savedPhrases: tempSaved }])\r\n                .match({ userId: supabase.auth.user().id });\r\n            updateStatus(false);\r\n\r\n            return;\r\n        }\r\n        var array = [props.object.id, ...data[0].savedPhrases];\r\n        console.log(array);\r\n        const { data: data2, error2 } = await supabase\r\n            .from(\"users\")\r\n            .update([{ savedPhrases: array }])\r\n            .match({ userId: supabase.auth.user().id });\r\n        updateStatus(true);\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <div className='phrase-card'>\r\n                <p className='phrase-card-text'>{props.object?.data}</p>\r\n                {/* <p className='phrase-card-author'> */}\r\n                <a href='' className='phrase-card-author'>\r\n                    by {author}\r\n                </a>\r\n                {/* </p> */}\r\n\r\n                <div className='phrase-card-actions'>\r\n                    {props.object?.tags.map((type) => {\r\n                        return <Tag data={type}></Tag>;\r\n                    })}\r\n                </div>\r\n                <div className='phrase-card-actions' style={{ marginTop: 0 }}>\r\n                    <button className='phrase-card-action' onClick={addLike} style={{ backgroundColor: isLiked ? \"#ffdd00\" : \"\" }}>\r\n                        {likeCount == 1 ? (\r\n                            <p style={{ color: isLiked ? \"black\" : \"\" }}>{likeCount} 💜</p>\r\n                        ) : (\r\n                            <p style={{ color: isLiked ? \"black\" : \"\" }}>{likeCount} 💜</p>\r\n                        )}\r\n                    </button>\r\n                    <button className='phrase-card-action' onClick={addSaves} style={{ backgroundColor: saved ? \"var(--primary)\" : \"\" }}>\r\n                        💾\r\n                        {/* {saved ? <p>Saved</p> : <p>Save</p>} */}\r\n                    </button>\r\n                </div>\r\n            </div>\r\n        </>\r\n    );\r\n};\r\n\r\nfunction Tag(props) {\r\n    return <div className='phrase-card-tag'>{props.data}</div>;\r\n}\r\n\r\nexport default PhraseCard;\r\n","import React from \"react\";\r\nimport PhraseCard from \"../components/PhraseCard\";\r\nimport { useState, useEffect, useRef } from \"react\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport { useHistory } from \"react-router\";\r\n\r\nimport { createClient } from \"@supabase/supabase-js\";\r\nconst supabase = createClient(\r\n    \"https://hiiwioouscmwdgfhobom.supabase.co\",\r\n    \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJyb2xlIjoiYW5vbiIsImlhdCI6MTYyODA0MTA5NiwiZXhwIjoxOTQzNjE3MDk2fQ.uMF3eAqCD2zgJnJJL6h2rKYSH-d2H6rsGrXGF74X-70\"\r\n);\r\n\r\nconst natural = require(\"natural\");\r\n\r\nfunction Home(props) {\r\n    // State variable that holds the array of rows that are created by you\r\n    const [myPhrases, updatePhrases] = useState([]);\r\n    const [savedPhrases, updateSavedPhrases] = useState([]);\r\n    const [trendingPhrases, updateTrendingPhrases] = useState([]);\r\n    const [redirect, changeRedirect] = useState(false);\r\n    let history = useHistory();\r\n\r\n    const {\r\n        register: register,\r\n        handleSubmit: handleSubmit,\r\n        formState: { errors },\r\n    } = useForm();\r\n\r\n    useEffect(() => {\r\n        console.log(\"hello\");\r\n        // needs to be a separate function for await\r\n        addTrending();\r\n        getPersonal();\r\n        getSaved();\r\n    }, [supabase.auth.user()]);\r\n    const searchThings = (data) => {\r\n        let tags = data.value;\r\n        tags = tags.split(\" \");\r\n        tags = tags.map((tag) => {\r\n            let stemmedTag = natural.PorterStemmer.stem(tag);\r\n            stemmedTag = stemmedTag.toLowerCase();\r\n            return stemmedTag;\r\n        });\r\n        history.push(\"/search/\" + tags.join(\"-\"));\r\n        changeRedirect(true);\r\n    };\r\n    async function getPersonal() {\r\n        // this does correctly get the data from supabase\r\n        const { data, error } = await supabase.from(\"pickuplines\").select().match({ userId: supabase.auth.user()?.id }).order(\"date\", { ascending: false });\r\n        // updates the state variable probably where things go wrong\r\n        updatePhrases(data);\r\n        // data.forEach((element) => {\r\n        //     console.log(element);\r\n        // });\r\n    }\r\n    async function getSaved() {\r\n        const { data, error } = await supabase.from(\"users\").select(\"savedPhrases\").match({ userId: supabase.auth.user()?.id });\r\n        console.log(data);\r\n        var tempArray = [];\r\n        try {\r\n            for (const savedPostId of data[0]?.savedPhrases) {\r\n                const { data: data2, error: error2 } = await supabase.from(\"pickuplines\").select().match({ id: savedPostId });\r\n                console.log(data2, savedPostId);\r\n                if (tempArray.length == 4) {\r\n                    break;\r\n                }\r\n                tempArray.push(data2[0]);\r\n            }\r\n            updateSavedPhrases(tempArray);\r\n        } catch (error) {}\r\n    }\r\n    async function addTrending() {\r\n        const { data, error } = await supabase.from(\"pickuplines\").select().order(\"likes\", { ascending: false }).limit(8);\r\n        updateTrendingPhrases(data);\r\n    }\r\n    return (\r\n        <div>\r\n            <div style={{ display: \"flex\", flexDirection: \"column\", justifyContent: \"center\", padding: \"1rem\", boxSizing: \"border-box\" }}>\r\n                <h1 style={{ fontSize: \"5rem\", marginBottom: \"1rem\" }}>\r\n                    FIND THE PERFECT <span style={{ textDecoration: \"underline\" }}>PICKUP LINE</span>\r\n                </h1>\r\n                <form onSubmit={handleSubmit(searchThings)}>\r\n                    <input type='text' {...register(\"value\", { required: true })} placeholder='Describe your target...'></input>\r\n                </form>\r\n            </div>\r\n\r\n            <div style={{ width: \"100%\", display: \"flex\", flexDirection: \"row\" }}>\r\n                <div className='phrase-column'>\r\n                    <h2>Trending Pickups</h2>\r\n                    {trendingPhrases.map((phraseObject) => {\r\n                        console.log(phraseObject.id);\r\n                        return <PhraseCard object={phraseObject} key={phraseObject?.id}></PhraseCard>;\r\n                    })}\r\n                </div>\r\n                <div className='phrase-column'>\r\n                    <h2>My Pickups</h2>\r\n                    {myPhrases.map((phraseObject) => {\r\n                        console.log(phraseObject.id);\r\n                        return <PhraseCard object={phraseObject} key={phraseObject?.id}></PhraseCard>;\r\n                    })}\r\n                </div>\r\n                <div className='phrase-column'>\r\n                    <h2>Saved Pickups</h2>\r\n                    {savedPhrases.map((phraseObject) => {\r\n                        console.log(phraseObject);\r\n                        return <PhraseCard object={phraseObject} key={phraseObject?.id}></PhraseCard>;\r\n                    })}\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Home;\r\n","import React from \"react\";\r\nimport PhraseCard from \"../components/PhraseCard\";\r\nimport { useLocation } from \"react-router\";\r\nimport { useState, useEffect, useRef } from \"react\";\r\nimport { createClient } from \"@supabase/supabase-js\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport { useParams } from \"react-router-dom\";\r\nconst natural = require(\"natural\");\r\n\r\nconst supabase = createClient(\r\n    \"https://hiiwioouscmwdgfhobom.supabase.co\",\r\n    \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJyb2xlIjoiYW5vbiIsImlhdCI6MTYyODA0MTA5NiwiZXhwIjoxOTQzNjE3MDk2fQ.uMF3eAqCD2zgJnJJL6h2rKYSH-d2H6rsGrXGF74X-70\"\r\n);\r\n\r\nfunction Search(props) {\r\n    const [tagList, updatedPhrases] = useState([]);\r\n    let location = useLocation();\r\n    let params = useParams();\r\n    const [matchingPhrases, updateMatch] = useState([]);\r\n    useEffect(() => {}, [supabase.auth.user()]);\r\n\r\n    const {\r\n        register: register,\r\n        handleSubmit: handleSubmit,\r\n        formState: { errors },\r\n    } = useForm();\r\n    const {\r\n        register: register2,\r\n        handleSubmit: handleSubmit2,\r\n        formState: { errors2 },\r\n    } = useForm();\r\n\r\n    function removeTag(phrase) {\r\n        let newAr = tagList.filter((ph) => phrase !== ph);\r\n        updatedPhrases(newAr);\r\n        console.log(\"newAr\");\r\n        console.log(newAr);\r\n    }\r\n\r\n    async function search() {\r\n        console.log(tagList);\r\n        const { data: data2, error: error2 } = await supabase\r\n            .from(\"pickuplines\")\r\n            .select()\r\n            .contains(\"tags\", tagList)\r\n            .limit(10)\r\n            .order(\"likes\", { ascending: false });\r\n        updateMatch(data2);\r\n    }\r\n    const onTagEntry = (data, e) => {\r\n        let stemmedTag = natural.PorterStemmer.stem(data.tag);\r\n        stemmedTag = stemmedTag.toLowerCase();\r\n        if (!tagList.includes(stemmedTag)) {\r\n            if (stemmedTag !== \"\") {\r\n                console.log(\"asdfasdfasdfads\");\r\n                console.log(stemmedTag);\r\n                console.log(tagList);\r\n                updatedPhrases([stemmedTag].concat(tagList));\r\n            }\r\n        }\r\n        e.target.reset();\r\n    };\r\n\r\n    useEffect(function () {\r\n        let loadedTags = params.tags.split(\"-\");\r\n        updatedPhrases(loadedTags);\r\n    }, []);\r\n\r\n    useEffect(\r\n        function () {\r\n            console.log(\"my taglist\");\r\n            console.log(tagList);\r\n            search();\r\n        },\r\n        [tagList]\r\n    );\r\n\r\n    return (\r\n        <div style={{ display: \"flex\", flexDirection: \"row\" }}>\r\n            <div style={{ width: \"50vw\", padding: \"1rem\", boxSizing: \"border-box\" }}></div>\r\n            <div style={{ width: \"50vw\", padding: \"1rem\", boxSizing: \"border-box\", position: \"fixed\" }}>\r\n                <form onSubmit={handleSubmit2(onTagEntry)}>\r\n                    {/* register your input into the hook by invoking the \"register\" function */}\r\n                    <h1 className='input-label'>Describe the person this is for, or the type of line (e.g. pun, bad)</h1>\r\n                    <input type='text' {...register2(\"tag\")} placeholder='tags...' id='searchBox' />\r\n\r\n                    <div style={{ marginTop: \"2rem\" }}></div>\r\n                </form>\r\n                {tagList.map((phrase) => {\r\n                    console.log(phrase);\r\n                    return (\r\n                        <Tag\r\n                            onClick={function () {\r\n                                removeTag(phrase);\r\n                            }}>\r\n                            {phrase}\r\n                        </Tag>\r\n                    );\r\n                })}\r\n            </div>\r\n            <div className='phrase-column'>\r\n                {!!matchingPhrases &&\r\n                    matchingPhrases.map((phraseObject) => {\r\n                        console.log(phraseObject.data);\r\n                        return <PhraseCard object={phraseObject} key={phraseObject.id}></PhraseCard>;\r\n                    })}\r\n            </div>\r\n            <div style={{ marginTop: \"2rem\" }}></div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport function Tag(props) {\r\n    return (\r\n        <div\r\n            className='phrase-card-tag'\r\n            style={{\r\n                marginBottom: \"2rem\",\r\n                fontSize: \"2rem\",\r\n                padding: \"1rem\",\r\n                display: \"inline-flex\",\r\n                alignItems: \"center\",\r\n                backgroundColor: \"var(--secondaryBackground)\",\r\n            }}>\r\n            {props.children}\r\n            <button\r\n                onClick={props.onClick}\r\n                style={{\r\n                    marginLeft: \"1rem\",\r\n                    fontSize: \"2rem\",\r\n                    border: \"none\",\r\n                    backgroundColor: \"transparent\",\r\n                    transform: \"rotate(\" + -45 + \"deg)\",\r\n                    color: \"var(--secondaryText)\",\r\n                    // backgroundColor: \"var(--tertiaryBackground)\",\r\n                    // aspectRatio: \"1/1\",\r\n                    // boxSizing: \"border-box\",\r\n                }}>\r\n                +\r\n            </button>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Search;\r\n","import React from \"react\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport { useState, useEffect, useRef } from \"react\";\r\nimport { Redirect, useHistory } from \"react-router-dom\";\r\n\r\nimport { createClient } from \"@supabase/supabase-js\";\r\nimport { Tag } from \"./Search\";\r\nconst supabase = createClient(\r\n    \"https://hiiwioouscmwdgfhobom.supabase.co\",\r\n    \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJyb2xlIjoiYW5vbiIsImlhdCI6MTYyODA0MTA5NiwiZXhwIjoxOTQzNjE3MDk2fQ.uMF3eAqCD2zgJnJJL6h2rKYSH-d2H6rsGrXGF74X-70\"\r\n);\r\nconst natural = require(\"natural\");\r\n\r\nfunction Create(props) {\r\n    const [tagList, updatedPhrases] = useState([]);\r\n    const navigation = useHistory();\r\n\r\n    const {\r\n        register: register,\r\n        handleSubmit: handleSubmit,\r\n        formState: { errors },\r\n    } = useForm();\r\n    const {\r\n        register: register2,\r\n        handleSubmit: handleSubmit2,\r\n        formState: { errors2 },\r\n    } = useForm();\r\n\r\n    const onTagEntry = (data, e) => {\r\n        let stemmedTag = natural.PorterStemmer.stem(data.tag);\r\n        stemmedTag = stemmedTag.toLowerCase();\r\n        if (!tagList.includes(stemmedTag)) {\r\n            updatedPhrases([...tagList, stemmedTag]);\r\n        }\r\n        e.target.reset();\r\n    };\r\n    const onPickupSubmit = (data) => {\r\n        console.log(\"yo\");\r\n        addToDatabase(data);\r\n    };\r\n    async function addToDatabase(data5) {\r\n        // const { data, error } = await supabase.from(\"users\").insert([{ email: \"user.email\", userId: \"user.id\" }]);\r\n\r\n        const { data, error } = await supabase.from(\"pickuplines\").insert([{ userId: supabase.auth.user().id, data: data5.value, tags: tagList }]);\r\n        navigation.push(\"/home\");\r\n    }\r\n\r\n    function removeTag(phrase) {\r\n        updatedPhrases(tagList.filter((ph) => phrase !== ph));\r\n    }\r\n\r\n    if (supabase.auth.user() == undefined) return <Redirect to='/signin'></Redirect>;\r\n\r\n    return (\r\n        <div>\r\n            <h1 className='page-heading'>Add a Roast</h1>\r\n            <div>\r\n                <form onSubmit={handleSubmit2(onTagEntry)}>\r\n                    {/* register your input into the hook by invoking the \"register\" function */}\r\n                    <h1 className='input-label'>Describe the person this is for, or the type of line (e.g. pun, bad)</h1>\r\n                    <input type='text' {...register2(\"tag\")} placeholder='french' />\r\n                </form>\r\n                <div style={{ marginTop: \"2rem\" }}>\r\n                    {tagList.map((phrase) => (\r\n                        <Tag\r\n                            onClick={function () {\r\n                                removeTag(phrase);\r\n                            }}>\r\n                            {phrase}\r\n                        </Tag>\r\n                    ))}\r\n                </div>\r\n            </div>\r\n            <div>\r\n                <form onSubmit={handleSubmit(onPickupSubmit)}>\r\n                    <h1 className='input-label'>Enter Pickup Line</h1>\r\n                    <input type='text' {...register(\"value\", { required: true })} placeholder='Are you French? Because Eiffel for you.'></input>\r\n                    {errors.value && <h1 className='input-error'>Please enter a Pickup Line</h1>}\r\n\r\n                    <button type='submit' style={{ marginTop: \"2rem\" }}>\r\n                        Submit\r\n                    </button>\r\n                </form>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Create;\r\n","import React from \"react\";\r\n\r\nimport { FaFire, FaGrinAlt, FaGrinHearts, FaSadCry, FaSignOutAlt, FaPen } from \"react-icons/fa\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nfunction Navbar(props) {\r\n    return (\r\n        <>\r\n            {/* THIS ONE IS FAKE */}\r\n            <div className='navbar' style={{ position: \"unset\" }}>\r\n                <Link to='/home' className='navbar-option'>\r\n                    <FaFire></FaFire>\r\n                </Link>\r\n                {/* <a href='https://google.com' className='navbar-option'>\r\n                    <FaGrinHearts></FaGrinHearts>\r\n                    <h1>Pickups</h1>\r\n                </a> */}\r\n                <Link to='/create' className='navbar-option'>\r\n                    <FaPen></FaPen>\r\n                    <h1>Create</h1>\r\n                </Link>\r\n            </div>\r\n            <div className='navbar' style={{ zIndex: 10 }}>\r\n                <Link to='/home' className='navbar-option'>\r\n                    <FaFire></FaFire>\r\n                </Link>\r\n                {/* <a href='https://google.com' className='navbar-option'>\r\n                    <FaGrinHearts></FaGrinHearts>\r\n                    <h1>Pickups</h1>\r\n                </a> */}\r\n                <Link to='/create' className='navbar-option'>\r\n                    <FaPen></FaPen>\r\n                    <h1>Create</h1>\r\n                </Link>\r\n                <div style={{ flex: 1 }}></div>\r\n                <Link to='/signout' className='navbar-option'>\r\n                    <FaSignOutAlt></FaSignOutAlt>\r\n                </Link>\r\n            </div>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default Navbar;\r\n","import React from \"react\";\r\nimport PhraseCard from \"../components/PhraseCard\";\r\n\r\nfunction Explore(props) {\r\n    return (\r\n        <div>\r\n            <PhraseCard></PhraseCard>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Explore;\r\n","import React, { useEffect } from \"react\";\r\n\r\nimport { createClient } from \"@supabase/supabase-js\";\r\nimport { useHistory } from \"react-router-dom\";\r\nconst supabase = createClient(\r\n    \"https://hiiwioouscmwdgfhobom.supabase.co\",\r\n    \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJyb2xlIjoiYW5vbiIsImlhdCI6MTYyODA0MTA5NiwiZXhwIjoxOTQzNjE3MDk2fQ.uMF3eAqCD2zgJnJJL6h2rKYSH-d2H6rsGrXGF74X-70\"\r\n);\r\n\r\nfunction SignOut(props) {\r\n    const navigation = useHistory();\r\n\r\n    useEffect(function () {\r\n        //sign out of supabase\r\n        supabase.auth.signOut();\r\n        navigation.push(\"/signin\");\r\n    }, []);\r\n\r\n    return <div>Sign Out</div>;\r\n}\r\n\r\nexport default SignOut;\r\n","import logo from \"./logo.svg\";\r\nimport \"./App.css\";\r\nimport { HashRouter as Router, Switch, Route, Link, Redirect } from \"react-router-dom\";\r\nimport SignIn from \"./pages/signin.js\";\r\nimport Home from \"./pages/Home\";\r\nimport Create from \"./pages/Create\";\r\nimport Navbar from \"./components/Navbar\";\r\nimport Explore from \"./pages/Explore\";\r\nimport { createClient } from \"@supabase/supabase-js\";\r\nimport Search from \"./pages/Search\";\r\nimport SignOut from \"./pages/SignOut\";\r\nconst supabase = createClient(\r\n    \"https://hiiwioouscmwdgfhobom.supabase.co\",\r\n    \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJyb2xlIjoiYW5vbiIsImlhdCI6MTYyODA0MTA5NiwiZXhwIjoxOTQzNjE3MDk2fQ.uMF3eAqCD2zgJnJJL6h2rKYSH-d2H6rsGrXGF74X-70\"\r\n);\r\n\r\nfunction App() {\r\n    return (\r\n        <Router>\r\n            {supabase.auth.user() == undefined ? <Redirect to='/signin'></Redirect> : <div></div>}\r\n            <div style={{ display: \"flex\", flexDirection: \"row\" }}>\r\n                <div className='page'>\r\n                    <Switch>\r\n                        <Route path='/signin'>\r\n                            <SignIn></SignIn>\r\n                        </Route>\r\n                        <Route path='/signout'>\r\n                            <SignOut></SignOut>\r\n                        </Route>\r\n                        <Route path='/home'>\r\n                            <Home></Home>\r\n                        </Route>\r\n                        <Route path='/create'>\r\n                            <Create></Create>\r\n                        </Route>\r\n                        <Route path='/search/:tags?'>\r\n                            <Search></Search>\r\n                        </Route>\r\n                        <Route path='/'>\r\n                            <Home></Home>\r\n                        </Route>\r\n                    </Switch>\r\n                </div>\r\n                <Navbar></Navbar>\r\n            </div>\r\n        </Router>\r\n    );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}